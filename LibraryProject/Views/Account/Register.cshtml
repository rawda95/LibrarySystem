@*@model IEnumerable< LibraryProject.Models.RegisterViewModel>*@
@using LibraryProject.Models
@model UserAddTableModel
@using LibraryProject.Identity;
@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var x = Request.QueryString["view"];
    ApplicationDbContext db = new ApplicationDbContext();
    int flagId = 0;
}
<h2 class="mt-2">@ViewBag.Title.</h2>
@*@using (Html.BeginForm("Register", "Account", new { add = Request.QueryString["add"] }, FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))*@
<div class="container mt-3">
    <div class="row">
        <div class="col-12 col-md-5" id="form">
            <button onclick="clearFun()">Clear</button>
            @Html.Partial("_Add", Model.RegisterViewModel)
        </div>
        <div class="col-12 col-md-4">
            <div>
                @Html.TextBox("txtSearch", null, new { id = "txtSearch" })
                <input type="submit" value="Search" onclick="Search()" />
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                if (Model.ApplicationUsers.Count() == 0)
                {
                    <b> Ther IS NO Data To DISPLAY</b>
                }
                else
                {
                    <div id="serchedTable">
                        <div>
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">First</th>
                                        <th scope="col">Last</th>
                                        <th scope="col">salar</th>
                                        <th scope="col">img</th>
                                        <th scope="col"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.ApplicationUsers)
                                    {
                                        //Convert byte arry to base64string
                                        string imgBase64Data = Convert.ToBase64String(item.Photo);
                                        string imgDataURL = string.Format("data:{1};base64,{0}", imgBase64Data, MimeMapping.GetMimeMapping(imgBase64Data));



                                        flagId = db.Users.SingleOrDefault(user => user.Id == item.Id).FlagId;

                                        <tr>
                                            <td>@item.FirstName</td>
                                            <td>@item.LastName</td>
                                            <td>@item.UserName</td>
                                            <td>@item.Email</td>
                                            <td><img src="@imgDataURL" width="100" height="100"> </td>
                                            @* <td>@Html.ActionLink("Delete", "Delete", "Account", new { id = item.Id, delete = Request.QueryString["view"] }, null)</td>*@
                                            @*<td>@Html.ActionLink("Details", "Details", "Account", new { id = item.Id, details = Request.QueryString["view"] }, null)</td>*@
                                            <td>
                                                @Ajax.ActionLink("Delete", "Delete", "Account", new { id = item.Id, delete = Request.QueryString["view"], edit = Request.QueryString["view"] },
                                         new AjaxOptions
                                         {

                                             UpdateTargetId = "serchedTable",
                                             InsertionMode = InsertionMode.Replace,

                                         }, new { @class = "btn btn-info" })
                                            </td>
                                            @*<td>
                                                       @Ajax.ActionLink("Details", "Details", "Account", new { id = item.Id, details = Request.QueryString["view"] },
                                                new AjaxOptions
                                                {

                                                    UpdateTargetId = "Modell",
                                                    InsertionMode = InsertionMode.Replace,
                                                    OnComplete = "modalData()"

                                                }, new { @class = "btn btn-info" })
                                                   </td>*@
                                            @if (!User.IsInRole("Employee"))
                                            {

                                                @*<td>@Html.ActionLink("Edit", "Edit", "Account", new { id = item.Id, edit = Request.QueryString["view"] }, null)</td>*@
                                                <td>
                                                    @*Request.RequestContext.RouteData.Values["abc"]*@
                                                    @Ajax.ActionLink("Edit", "Edit", "Account", new { id = item.Id, data = Request.QueryString["view"], edit = Request.QueryString["view"] },
                                 new AjaxOptions
                                 {

                                     UpdateTargetId = "form",
                                     InsertionMode = InsertionMode.Replace,

                                 }, new { @class = "btn btn-info" })
                                                </td>
                                            }
                                            else
                                            {
                                                if (flagId == 0)
                                                {
                                                    <td>
                                                        @* @Html.ActionLink("Accept", "AcceptMember", "Account", new { id = item.Id, accept = Request.QueryString["view"] }, null)*@
                                                        @Ajax.ActionLink("Accept", "AcceptMember", "Account", new { id = item.Id, accept = Request.QueryString["view"], edit = Request.QueryString["view"] },
                                                 new AjaxOptions
                                                 {

                                                     UpdateTargetId = "serchedTable",
                                                     InsertionMode = InsertionMode.Replace,

                                                 }, new { @class = "btn btn-info" })
                                                    </td>

                                                }

                                            }
                                        </tr>
                                    }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
@* Pop Up *@
<div id="modals" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal">&times;</button>
            </div>
            @* Ajax *@
            <div id="Modell">
                Hello
            </div>
        </div>
    </div>
</div>
@* End Pop UP *@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>


        function clearFun() {
            console.log("clear");
            a = $("input[type ='text']")
            for (i = 0; i < a.length; i++) {
                a[i].value = "";
            }


        }
        //
        function Search() {
            let txtSearched = document.getElementById("txtSearch");
            let searchValue = txtSearched.value;
            console.log(searchValue);
            $.ajax({
                url: `/Account/Index?txtSearch=${searchValue}`,
                type: "POST",
                success: function (data) {
                    console.log("Done");
                    $('#serchedTable').html(data)

                }
            })
        }

        //PopUP
        function modalData() {
            $("#modals").modal(
                { show: true }
            );
        }
        //AutoComplete
        $(document).ready(function () {
            $("#txtSearch").autocomplete({

                source: function (request, response) {
                    console.log(response.data)
                    $.ajax({
                        url: `/Account/GetUsers`,
                        type: "POST",
                        dataType: "json",
                        data: { pattern: request.term },
                        success: function (data) {
                            console.log(data)
                            response($.map(data, function (item) {
                                return { label: item, value: item };
                            }))

                        }
                    })
                },
                messages: {
                    noResults: "", results: ""
                }
            });
        })
    </script>
}
